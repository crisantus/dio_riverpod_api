openapi: 3.0.0
info:
  title: Dio-Task Manager
  contact: {}
  version: '1.0'
servers:
  - url: http://dio-task-manager.com/api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RegisterUserRequest'
                - example:
                    name: peter
                    email: peter@gmail.com
                    password: secret
            example:
              name: peter
              email: peter@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/LoginUserRequest'
                - example:
                    email: petr@gmail.com
                    password: secret
            example:
              email: petr@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /task/:
    post:
      tags:
        - Tasks
      summary: Create Task
      operationId: CreateTask
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateTaskRequest'
                - example:
                    company: Hulu
                    position: Graphics Designer
            example:
              company: Hulu
              position: Graphics Designer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - Tasks
      summary: Get All Task
      operationId: GetAllTask
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /task/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The task ID
    get:
      tags:
        - Tasks
      summary: Get Single Task
      operationId: GetSingleTask
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []

    patch:
      tags:
        - Tasks
      summary: Update Task
      operationId: UpdateTask
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateTaskRequest'
                - example:
                    company: raandom
                    position: full-stack developer
            example:
              company: raandom
              position: full-stack developer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - Tasks
      summary: Delete Task
      operationId: DeleteTask
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /token/refresh-token:
    get:
      tags:
        - Tasks
      summary: Resfresh Token
      operationId: ResfreshToken
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
components:
  schemas:
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: peter
        email: peter@gmail.com
        password: secret
    LoginUserRequest:
      title: LoginUserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: petr@gmail.com
        password: secret
    CreateTaskRequest:
      title: CreateTaskRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Hulu
        position: Graphics Designer
    UpdateTaskRequest:
      title: UpdateTaskRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: raandom
        position: full-stack developer
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Auth
    description: ''
  - name: Tasks
    description: ''
