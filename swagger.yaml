openapi: 3.0.0
info:
  title: Dio-Task Manager
  contact: {}
  version: '1.0'
servers:
  - url: https://dio-task-manger-api.onrender.com/api/v1
    variables: {}
paths:
  /users:
    get:
      tags:
        - User
      summary: Get all User
      operationId: GetallUser
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /users/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The user ID
    get:
      tags:
        - User
      summary: Get Single User
      operationId: GetSingleUser
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /users/showMe:
    get:
      tags:
        - User
      summary: Show Current User
      operationId: ShowCurrentUser
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /users/updateUser:
    patch:
      tags:
        - User
      summary: Update User
      operationId: UpdateUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateUserRequest'
                - example:
                    name: santus
                    email: santus@gmail.com
            example:
              name: santus
              email: santus@gmail.com
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /users/updateUserPassword:
    patch:
      tags:
        - User
      summary: Update User Password
      operationId: UpdateUserPassword
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateUserPasswordRequest'
                - example:
                    currentPassword: '12345'
                    newPassword: secret
            example:
              currentPassword: '12345'
              newPassword: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RegisterUserRequest'
                - example:
                    name: natty
                    email: natty@gmail.com
                    password: secret
            example:
              name: natty
              email: natty@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/LoginUserRequest'
                - example:
                    email: ella@gmail.com
                    password: secret
            example:
              email: ella@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /task:
    post:
      tags:
        - Task
      summary: Create Task
      operationId: CreateTask
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateTaskRequest'
                - example:
                    title: Oath taking
                    description: on friday
            example:
              title: Oath taking
              description: on friday
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - Task
      summary: Get All Task
      operationId: GetAllTask
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /task/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The task ID
    get:
      tags:
        - Task
      summary: Get Single Task
      operationId: GetSingleTask
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - Task
      summary: Update Task
      operationId: UpdateTask
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateTaskRequest'
                - example:
                    title: Nysc
                    description: on holding because of no statement of result yet
            example:
              title: Nysc
              description: on holding because of no statement of result yet
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - Task
      summary: Delete Task
      operationId: DeleteTask
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /token/refresh-token:
    post:
      tags:
        - RefreshToken
      summary: Resfresh Token
      operationId: ResfreshToken
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ResfreshTokenRequest'
                - example:
                    refresh_token: ''
            example:
              refresh_token: ''
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
components:
  schemas:
    UpdateUserRequest:
      title: UpdateUserRequest
      required:
        - name
        - email
      type: object
      properties:
        name:
          type: string
        email:
          type: string
      example:
        name: santus
        email: santus@gmail.com
    UpdateUserPasswordRequest:
      title: UpdateUserPasswordRequest
      required:
        - currentPassword
        - newPassword
      type: object
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
      example:
        currentPassword: '12345'
        newPassword: secret
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: natty
        email: natty@gmail.com
        password: secret
    LoginUserRequest:
      title: LoginUserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: ella@gmail.com
        password: secret
    CreateTaskRequest:
      title: CreateTaskRequest
      required:
        - title
        - description
      type: object
      properties:
        title:
          type: string
        description:
          type: string
      example:
        title: Oath taking
        description: on friday
    UpdateTaskRequest:
      title: UpdateTaskRequest
      required:
        - title
        - description
      type: object
      properties:
        title:
          type: string
        description:
          type: string
      example:
        title: Nysc
        description: on holding because of no statement of result yet
    ResfreshTokenRequest:
      title: ResfreshTokenRequest
      required:
        - refresh_token
      type: object
      properties:
        refresh_token:
          type: string
      example:
        refresh_token: ''
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: User
    description: ''
  - name: Auth
    description: ''
  - name: Task
    description: ''
  - name: RefreshToken
    description: ''
